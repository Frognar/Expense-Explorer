version: '3.8'

services:
  eventstore:
    image: eventstore/eventstore:24.2.0-jammy
    environment:
      - EVENTSTORE_CLUSTER_SIZE=1
      - EVENTSTORE_RUN_PROJECTIONS=All
      - EVENTSTORE_START_STANDARD_PROJECTIONS=true
      - EVENTSTORE_HTTP_PORT=2113
      - EVENTSTORE_INSECURE=true
      - EVENTSTORE_ENABLE_ATOM_PUB_OVER_HTTP=true
    ports:
      - "1113:1113"
      - "2113:2113"
    volumes:
      - ./eventstore-data:/var/lib/eventstore
      - ./eventstore-logs:/var/log/eventstore
    networks:
      - app-network

  postgresql:
    image: postgres:16.2
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=5tr0ngP@55w0rd
      - POSTGRES_DB=ExpenseExplorer
    ports:
      - "5432:5432"
    volumes:
      - ./postgresql-data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: pg_isready -U postgres -d ExpenseExplorer
      interval: 3s
      timeout: 3s
      retries: 5

  api:
    build:
      context: ../../.
      dockerfile: src/ExpenseExplorer.API/Dockerfile
    ports:
      - "5163:5163"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_HTTP_PORTS=5163
    depends_on:
      eventstore:
        condition: service_healthy
      postgresql:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:5163/api/health || exit 1"]
      interval: 3s
      timeout: 3s
      retries: 5

  gui:
    build:
      context: ../../.
      dockerfile: src/ExpenseExplorer.GUI/Dockerfile
    ports:
      - "8080:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_HTTP_PORTS=8080
    depends_on:
      api:
        condition: service_healthy
    networks:
      - app-network


volumes:
  eventstore-data:
  eventstore-logs:
  postgresql-data:

networks:
  app-network:
